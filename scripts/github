#!/usr/bin/python3

import configparser
import os
import pprint
import sys

from github import Github
from prometheus_client import CollectorRegistry, Gauge, push_to_gateway


def get_config():
    """
    Get configuration options for this script
    """
    pkg = 'charmbuild-kpi-import'
    config = configparser.SafeConfigParser()
    conffiles = [
        '/etc/{}.ini'.format(pkg),
        os.path.expanduser('~/.{}.ini'.format(pkg)),
        '{}.ini'.format(pkg),
    ]
    config.read(conffiles)
    return config['DEFAULT']


def gather_issues_metrics(config, registry):
    gh = Github(config.get('github-token'))
    repo = gh.get_repo('juju/charm-tools')
    issues = repo.get_issues()
    gauge = Gauge(
        name='github_charmtools_issues_open',
        documentation='Count of open issues, by label',
        labelnames=['label'],
        registry=registry,
    )

    for issue in issues:
        labels = [l.name for l in issue.labels] or ['(unlabeled)']
        for label in labels:
            gauge.labels(label).inc()


def gather_layer_index_metrics(config, registry):
    gh = Github(config.get('github-token'))
    repo = gh.get_repo('juju/layer-index')
    gauge = Gauge(
        name='github_layerindex_total',
        documentation='Total number of layers by type (layer vs interface)',
        labelnames=['type'],
        registry=registry,
    )
    for layer_type in ('layers', 'interfaces'):
        contents = repo.get_dir_contents(layer_type)
        gauge.labels(layer_type).set(len(contents))


def main():
    config = get_config()
    registry = CollectorRegistry()

    gather_issues_metrics(config, registry)
    gather_layer_index_metrics(config, registry)

    if '--debug' not in sys.argv:
        push_to_gateway(config['push-gateway'],
                        job='charmbuild-github',
                        registry=registry)
    else:  # Debugging enabled.
        pprint.pprint([(x.name, x.samples) for x in registry.collect()])


if __name__ == '__main__':
    main()
